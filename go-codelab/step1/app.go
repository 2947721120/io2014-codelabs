//  Package todo is an App Engine app providing a REST API to manage todo
//  lists.
//
//  The REST API provides the following handlers:
//
//  /api/lists GET
//    Gets all the list names and ids and creators if no user is logged in.
//    If the user is logged in, only their lists.
//  /api/lists POST
//    Creates a new list.
//
package todo

import (
	"errors"
	"io"
	"net/http"

	"github.com/gorilla/mux"
)

// datastore entity kind for List
const listKind = "List"

// List represents a lists of tasks.
type List struct {
	// Autogenerated id, not stored in the datastore.
	ID string `datastore:"-"`

	Name string // Name of the list
}

func init() {
	// Register all the handlers.
	r := mux.NewRouter().PathPrefix("/api/").Subrouter()

	// List management
	r.Handle("/list", appHandler(getAllLists)).Methods("GET")

	http.Handle("/api/", r)
}

// getAllLists fetches all the lists in the datastore and encodes them
// in JSON format into the http response.
func getAllLists(w io.Writer, r *http.Request) error {
	return errors.New("getAllLists not implemented")

	// Create a slice of List.
	// Create a new datastore.Query and fetch all the lists from the datastore.
	// - datastore.NewQuery: http://golang.org/s/datastore#NewQuery

	// Update the encoded keys and encode the lists.
	// - datastore.Key.Encode: http://golang.org/s/datastore#Key.Encode

	// Create a JSON encoder and encode the slice of lists into the provided
	// io.Writer.
	// If encoding the list fails return the error.
	// - json.Encoder: http://golang.org/pkg/encoding/json#Encoder
}
